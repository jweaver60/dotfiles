scriptencoding utf-8
filetype off
set mouse=a

" Sane tabs
set tabstop=2
set softtabstop=2
set expandtab
set shiftwidth=2
set formatoptions=tcrq
set textwidth=80
set title

" Use comma for leader
let g:mapleader=','
let g:maplocalleader='\\'

set number
set omnifunc=syntaxcomplete#Complete

" Search settings
set hlsearch
set incsearch
set ignorecase
set smartcase
map <CR> :noh<CR>

call plug#begin('~/.config/nvim/plugged')

Plug 'sheerun/vim-polyglot'
  let g:polyglot_disabled = ['javascript']

Plug 'othree/yajs.vim'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
  let g:UltiSnipsExpandTrigger="<C-k>"
  let g:UltiSnipsJumpForwardTrigger="<C-b>"
  let g:UltiSnipsJumpBackwardTrigger="<C-z>"

Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-surround'
Plug 'mbbill/undotree'
  nnoremap <F5> :UndotreeToggle<CR>

Plug 'godlygeek/tabular'

Plug 'scrooloose/nerdtree'
  let NERDTreeShowHidden=1
  nnoremap <leader>n :NERDTreeToggle<CR>

Plug 'tpope/vim-fugitive'

Plug 'tomtom/tcomment_vim'

Plug 'mattn/emmet-vim'
  let g:user_emmet_leader_key=','

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
  let $FZF_DEFAULT_COMMAND = 'ag -g ""'
  let g:fzf_layout = { 'window': 'enew' }
  nnoremap <silent> <C-P> :FZF<CR>
  nnoremap <silent> <leader>a :Ag<CR>
  nnoremap <silent> <C-R> :BTags<CR>
  nnoremap <leader>b :Buffers<CR>
  augroup localfzf
    autocmd!
    autocmd FileType fzf :tnoremap <buffer> <C-J> <C-J>
    autocmd FileType fzf :tnoremap <buffer> <C-K> <C-K>
  augroup END

Plug 'neomake/neomake'
augroup localneomake
  autocmd! BufWritePost * Neomake
augroup END

Plug 'slashmili/alchemist.vim'
  let g:alchemist#elixir_erlang_src = "/usr/local/share/src"

Plug 'tpope/vim-rails'

Plug 'itchyny/lightline.vim'
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'component': {
      \   'readonly': '%{&readonly?"x":""}',
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '|', 'right': '|' }
      \ }

Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  let g:deoplete#enable_at_startup = 1
  if !exists('g:deoplete#omni#input_patterns')
    let g:deoplete#omni#input_patterns = {}
  endif
  " use tab for completion (not working with UltiSnips currently)
  inoremap <expr><Tab> pumvisible() ? "\<c-n>" : "\<Tab>"
  inoremap <expr><S-Tab> pumvisible() ? "\<c-p>" : "\<S-Tab>"

Plug 'powerman/vim-plugin-AnsiEsc'
Plug 'tomasr/molokai'
Plug 'christoomey/vim-tmux-navigator'
Plug 'edkolev/tmuxline.vim'
  let g:tmuxline_powerline_separators = 0

call plug#end()

set background=dark
colorscheme molokai
set colorcolumn=81
set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor

" Shortcuts
nnoremap <leader>w :w<CR>
noremap <C-c> :q<CR>

set undodir=~/.config/nvim/undo//      " undo directory
set directory=~/.config/nvim/swap//    " swap directory
set backupdir=~/.config/nvim/backup//  " backup directory
set viewdir=~/.config/nvim/views//     " views directory

set wildignore+=*/node_modules/*,*/_build/*

set scrolloff=5
vnoremap < <gv
vnoremap > >gv

map <Left>  :echo "no!"<cr>
map <Right> :echo "no!"<cr>
map <Up>    :echo "no!"<cr>
map <Down>  :echo "no!"<cr>

set splitbelow
set splitright

" Navigate splits with C-h,j,k,l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <silent> <BS> <C-w>h

augroup filetypedetect
  " always highlight Dockerfile correctly
  au BufNewFile,BufRead Dockerfile.* set filetype=dockerfile

  " always highlight elixir config files
  au BufNewFile,BufRead *.exs set filetype=elixir

  " always highlight nginx conf files
  au BufNewFile,BufRead docker-nginx.conf set filetype=nginx
augroup END

hi def link jsonKeyword Number
hi def link jsonTest    Number
hi def link jsonNumber  Function
hi def link jsonString  Type
hi def link jsonNull    String

" Delete trailing whitespace on save
func! DeleteTrailingWS()
  exe "normal mz"
  %s/\s\+$//ge
  exe "normal `z"
endfunc
au BufWrite * silent call DeleteTrailingWS()
